//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseManagerApp.TagServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TagServiceReference.ITagService")]
    public interface ITagService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddTag", ReplyAction="http://tempuri.org/ITagService/AddTagResponse")]
        bool AddTag(Scada.models.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddTag", ReplyAction="http://tempuri.org/ITagService/AddTagResponse")]
        System.Threading.Tasks.Task<bool> AddTagAsync(Scada.models.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/RemoveTag", ReplyAction="http://tempuri.org/ITagService/RemoveTagResponse")]
        bool RemoveTag(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/RemoveTag", ReplyAction="http://tempuri.org/ITagService/RemoveTagResponse")]
        System.Threading.Tasks.Task<bool> RemoveTagAsync(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/UpdateTag", ReplyAction="http://tempuri.org/ITagService/UpdateTagResponse")]
        bool UpdateTag(Scada.models.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/UpdateTag", ReplyAction="http://tempuri.org/ITagService/UpdateTagResponse")]
        System.Threading.Tasks.Task<bool> UpdateTagAsync(Scada.models.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetTag", ReplyAction="http://tempuri.org/ITagService/GetTagResponse")]
        Scada.models.Tag GetTag(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetTag", ReplyAction="http://tempuri.org/ITagService/GetTagResponse")]
        System.Threading.Tasks.Task<Scada.models.Tag> GetTagAsync(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllTags", ReplyAction="http://tempuri.org/ITagService/GetAllTagsResponse")]
        Scada.models.Tag[] GetAllTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllTags", ReplyAction="http://tempuri.org/ITagService/GetAllTagsResponse")]
        System.Threading.Tasks.Task<Scada.models.Tag[]> GetAllTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/IsTagNameUnique", ReplyAction="http://tempuri.org/ITagService/IsTagNameUniqueResponse")]
        bool IsTagNameUnique(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/IsTagNameUnique", ReplyAction="http://tempuri.org/ITagService/IsTagNameUniqueResponse")]
        System.Threading.Tasks.Task<bool> IsTagNameUniqueAsync(string tagName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITagServiceChannel : DatabaseManagerApp.TagServiceReference.ITagService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TagServiceClient : System.ServiceModel.ClientBase<DatabaseManagerApp.TagServiceReference.ITagService>, DatabaseManagerApp.TagServiceReference.ITagService {
        
        public TagServiceClient() {
        }
        
        public TagServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TagServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TagServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TagServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddTag(Scada.models.Tag tag) {
            return base.Channel.AddTag(tag);
        }
        
        public System.Threading.Tasks.Task<bool> AddTagAsync(Scada.models.Tag tag) {
            return base.Channel.AddTagAsync(tag);
        }
        
        public bool RemoveTag(string tagName) {
            return base.Channel.RemoveTag(tagName);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveTagAsync(string tagName) {
            return base.Channel.RemoveTagAsync(tagName);
        }
        
        public bool UpdateTag(Scada.models.Tag tag) {
            return base.Channel.UpdateTag(tag);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTagAsync(Scada.models.Tag tag) {
            return base.Channel.UpdateTagAsync(tag);
        }
        
        public Scada.models.Tag GetTag(string tagName) {
            return base.Channel.GetTag(tagName);
        }
        
        public System.Threading.Tasks.Task<Scada.models.Tag> GetTagAsync(string tagName) {
            return base.Channel.GetTagAsync(tagName);
        }
        
        public Scada.models.Tag[] GetAllTags() {
            return base.Channel.GetAllTags();
        }
        
        public System.Threading.Tasks.Task<Scada.models.Tag[]> GetAllTagsAsync() {
            return base.Channel.GetAllTagsAsync();
        }
        
        public bool IsTagNameUnique(string tagName) {
            return base.Channel.IsTagNameUnique(tagName);
        }
        
        public System.Threading.Tasks.Task<bool> IsTagNameUniqueAsync(string tagName) {
            return base.Channel.IsTagNameUniqueAsync(tagName);
        }
    }
}
