//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseManagerApp.AlarmServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AlarmServiceReference.IAlarmService")]
    public interface IAlarmService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/AddAlarm", ReplyAction="http://tempuri.org/IAlarmService/AddAlarmResponse")]
        bool AddAlarm(string token, Scada.models.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/AddAlarm", ReplyAction="http://tempuri.org/IAlarmService/AddAlarmResponse")]
        System.Threading.Tasks.Task<bool> AddAlarmAsync(string token, Scada.models.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetAllAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetAllAlarmsResponse")]
        Scada.models.Alarm[] GetAllAlarms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetAllAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetAllAlarmsResponse")]
        System.Threading.Tasks.Task<Scada.models.Alarm[]> GetAllAlarmsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/RemoveAlarm", ReplyAction="http://tempuri.org/IAlarmService/RemoveAlarmResponse")]
        bool RemoveAlarm(string token, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/RemoveAlarm", ReplyAction="http://tempuri.org/IAlarmService/RemoveAlarmResponse")]
        System.Threading.Tasks.Task<bool> RemoveAlarmAsync(string token, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetAlarmsByName", ReplyAction="http://tempuri.org/IAlarmService/GetAlarmsByNameResponse")]
        Scada.models.Alarm[] GetAlarmsByName(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetAlarmsByName", ReplyAction="http://tempuri.org/IAlarmService/GetAlarmsByNameResponse")]
        System.Threading.Tasks.Task<Scada.models.Alarm[]> GetAlarmsByNameAsync(string tagName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlarmServiceChannel : DatabaseManagerApp.AlarmServiceReference.IAlarmService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlarmServiceClient : System.ServiceModel.ClientBase<DatabaseManagerApp.AlarmServiceReference.IAlarmService>, DatabaseManagerApp.AlarmServiceReference.IAlarmService {
        
        public AlarmServiceClient() {
        }
        
        public AlarmServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AlarmServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddAlarm(string token, Scada.models.Alarm alarm) {
            return base.Channel.AddAlarm(token, alarm);
        }
        
        public System.Threading.Tasks.Task<bool> AddAlarmAsync(string token, Scada.models.Alarm alarm) {
            return base.Channel.AddAlarmAsync(token, alarm);
        }
        
        public Scada.models.Alarm[] GetAllAlarms() {
            return base.Channel.GetAllAlarms();
        }
        
        public System.Threading.Tasks.Task<Scada.models.Alarm[]> GetAllAlarmsAsync() {
            return base.Channel.GetAllAlarmsAsync();
        }
        
        public bool RemoveAlarm(string token, string name) {
            return base.Channel.RemoveAlarm(token, name);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveAlarmAsync(string token, string name) {
            return base.Channel.RemoveAlarmAsync(token, name);
        }
        
        public Scada.models.Alarm[] GetAlarmsByName(string tagName) {
            return base.Channel.GetAlarmsByName(tagName);
        }
        
        public System.Threading.Tasks.Task<Scada.models.Alarm[]> GetAlarmsByNameAsync(string tagName) {
            return base.Channel.GetAlarmsByNameAsync(tagName);
        }
    }
}
