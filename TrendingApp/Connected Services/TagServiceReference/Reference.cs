//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrendingApp.TagServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalogInputTag", Namespace="http://schemas.datacontract.org/2004/07/Scada.models")]
    [System.SerializableAttribute()]
    public partial class AnalogInputTag : TrendingApp.TagServiceReference.InputTag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AlarmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LowLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Alarms {
            get {
                return this.AlarmsField;
            }
            set {
                if ((this.AlarmsField.Equals(value) != true)) {
                    this.AlarmsField = value;
                    this.RaisePropertyChanged("Alarms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighLimit {
            get {
                return this.HighLimitField;
            }
            set {
                if ((this.HighLimitField.Equals(value) != true)) {
                    this.HighLimitField = value;
                    this.RaisePropertyChanged("HighLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LowLimit {
            get {
                return this.LowLimitField;
            }
            set {
                if ((this.LowLimitField.Equals(value) != true)) {
                    this.LowLimitField = value;
                    this.RaisePropertyChanged("LowLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/Scada.models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.TagServiceReference.OutputTag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.TagServiceReference.AnalogOutputTag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.TagServiceReference.DigitalOutputTag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.TagServiceReference.InputTag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.TagServiceReference.DigitalInputTag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.TagServiceReference.AnalogInputTag))]
    public partial class Tag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IoAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IoAddress {
            get {
                return this.IoAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IoAddressField, value) != true)) {
                    this.IoAddressField = value;
                    this.RaisePropertyChanged("IoAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutputTag", Namespace="http://schemas.datacontract.org/2004/07/Scada.models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.TagServiceReference.AnalogOutputTag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.TagServiceReference.DigitalOutputTag))]
    public partial class OutputTag : TrendingApp.TagServiceReference.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InitialValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InitialValue {
            get {
                return this.InitialValueField;
            }
            set {
                if ((this.InitialValueField.Equals(value) != true)) {
                    this.InitialValueField = value;
                    this.RaisePropertyChanged("InitialValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalogOutputTag", Namespace="http://schemas.datacontract.org/2004/07/Scada.models")]
    [System.SerializableAttribute()]
    public partial class AnalogOutputTag : TrendingApp.TagServiceReference.OutputTag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LowLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighLimit {
            get {
                return this.HighLimitField;
            }
            set {
                if ((this.HighLimitField.Equals(value) != true)) {
                    this.HighLimitField = value;
                    this.RaisePropertyChanged("HighLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LowLimit {
            get {
                return this.LowLimitField;
            }
            set {
                if ((this.LowLimitField.Equals(value) != true)) {
                    this.LowLimitField = value;
                    this.RaisePropertyChanged("LowLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitalOutputTag", Namespace="http://schemas.datacontract.org/2004/07/Scada.models")]
    [System.SerializableAttribute()]
    public partial class DigitalOutputTag : TrendingApp.TagServiceReference.OutputTag {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InputTag", Namespace="http://schemas.datacontract.org/2004/07/Scada.models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.TagServiceReference.DigitalInputTag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.TagServiceReference.AnalogInputTag))]
    public partial class InputTag : TrendingApp.TagServiceReference.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnOffScanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScanTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnOffScan {
            get {
                return this.OnOffScanField;
            }
            set {
                if ((this.OnOffScanField.Equals(value) != true)) {
                    this.OnOffScanField = value;
                    this.RaisePropertyChanged("OnOffScan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScanTime {
            get {
                return this.ScanTimeField;
            }
            set {
                if ((this.ScanTimeField.Equals(value) != true)) {
                    this.ScanTimeField = value;
                    this.RaisePropertyChanged("ScanTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitalInputTag", Namespace="http://schemas.datacontract.org/2004/07/Scada.models")]
    [System.SerializableAttribute()]
    public partial class DigitalInputTag : TrendingApp.TagServiceReference.InputTag {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagValue", Namespace="http://schemas.datacontract.org/2004/07/Scada.models")]
    [System.SerializableAttribute()]
    public partial class TagValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IOAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TrendingApp.TagServiceReference.ValueType ValueTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IOAddress {
            get {
                return this.IOAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IOAddressField, value) != true)) {
                    this.IOAddressField = value;
                    this.RaisePropertyChanged("IOAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TrendingApp.TagServiceReference.ValueType ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((this.ValueTypeField.Equals(value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValueType", Namespace="http://schemas.datacontract.org/2004/07/Scada.models")]
    public enum ValueType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ANALOG = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DIGITAL = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmValue", Namespace="http://schemas.datacontract.org/2004/07/Scada.models")]
    [System.SerializableAttribute()]
    public partial class AlarmValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ThresholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TrendingApp.TagServiceReference.AlarmType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Threshold {
            get {
                return this.ThresholdField;
            }
            set {
                if ((this.ThresholdField.Equals(value) != true)) {
                    this.ThresholdField = value;
                    this.RaisePropertyChanged("Threshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TrendingApp.TagServiceReference.AlarmType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmType", Namespace="http://schemas.datacontract.org/2004/07/Scada.models")]
    public enum AlarmType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOW = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HIGH = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alarm", Namespace="http://schemas.datacontract.org/2004/07/Scada.models")]
    [System.SerializableAttribute()]
    public partial class Alarm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ThresholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TrendingApp.TagServiceReference.AlarmType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Threshold {
            get {
                return this.ThresholdField;
            }
            set {
                if ((this.ThresholdField.Equals(value) != true)) {
                    this.ThresholdField = value;
                    this.RaisePropertyChanged("Threshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TrendingApp.TagServiceReference.AlarmType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TagServiceReference.ITagService", CallbackContract=typeof(TrendingApp.TagServiceReference.ITagServiceCallback))]
    public interface ITagService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/Hello", ReplyAction="http://tempuri.org/ITagService/HelloResponse")]
        void Hello();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/Hello", ReplyAction="http://tempuri.org/ITagService/HelloResponse")]
        System.Threading.Tasks.Task HelloAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/InitTrending", ReplyAction="http://tempuri.org/ITagService/InitTrendingResponse")]
        void InitTrending(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/InitTrending", ReplyAction="http://tempuri.org/ITagService/InitTrendingResponse")]
        System.Threading.Tasks.Task InitTrendingAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllAnalogInputTags", ReplyAction="http://tempuri.org/ITagService/GetAllAnalogInputTagsResponse")]
        TrendingApp.TagServiceReference.AnalogInputTag[] GetAllAnalogInputTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllAnalogInputTags", ReplyAction="http://tempuri.org/ITagService/GetAllAnalogInputTagsResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.AnalogInputTag[]> GetAllAnalogInputTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAnalogInputTag", ReplyAction="http://tempuri.org/ITagService/GetAnalogInputTagResponse")]
        TrendingApp.TagServiceReference.AnalogInputTag GetAnalogInputTag(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAnalogInputTag", ReplyAction="http://tempuri.org/ITagService/GetAnalogInputTagResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.AnalogInputTag> GetAnalogInputTagAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddAnalogInputTag", ReplyAction="http://tempuri.org/ITagService/AddAnalogInputTagResponse")]
        void AddAnalogInputTag(string token, TrendingApp.TagServiceReference.AnalogInputTag analogInputTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddAnalogInputTag", ReplyAction="http://tempuri.org/ITagService/AddAnalogInputTagResponse")]
        System.Threading.Tasks.Task AddAnalogInputTagAsync(string token, TrendingApp.TagServiceReference.AnalogInputTag analogInputTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/UpdateAnalogInputTag", ReplyAction="http://tempuri.org/ITagService/UpdateAnalogInputTagResponse")]
        TrendingApp.TagServiceReference.AnalogInputTag UpdateAnalogInputTag(string token, TrendingApp.TagServiceReference.AnalogInputTag analogInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/UpdateAnalogInputTag", ReplyAction="http://tempuri.org/ITagService/UpdateAnalogInputTagResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.AnalogInputTag> UpdateAnalogInputTagAsync(string token, TrendingApp.TagServiceReference.AnalogInputTag analogInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllAnalogOutputTags", ReplyAction="http://tempuri.org/ITagService/GetAllAnalogOutputTagsResponse")]
        TrendingApp.TagServiceReference.AnalogOutputTag[] GetAllAnalogOutputTags(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllAnalogOutputTags", ReplyAction="http://tempuri.org/ITagService/GetAllAnalogOutputTagsResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.AnalogOutputTag[]> GetAllAnalogOutputTagsAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAnalogOutputTag", ReplyAction="http://tempuri.org/ITagService/GetAnalogOutputTagResponse")]
        TrendingApp.TagServiceReference.AnalogOutputTag GetAnalogOutputTag(string token, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAnalogOutputTag", ReplyAction="http://tempuri.org/ITagService/GetAnalogOutputTagResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.AnalogOutputTag> GetAnalogOutputTagAsync(string token, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddAnalogOutputTag", ReplyAction="http://tempuri.org/ITagService/AddAnalogOutputTagResponse")]
        void AddAnalogOutputTag(string token, TrendingApp.TagServiceReference.AnalogOutputTag analogOutputTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddAnalogOutputTag", ReplyAction="http://tempuri.org/ITagService/AddAnalogOutputTagResponse")]
        System.Threading.Tasks.Task AddAnalogOutputTagAsync(string token, TrendingApp.TagServiceReference.AnalogOutputTag analogOutputTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/UpdateAnalogOutputTag", ReplyAction="http://tempuri.org/ITagService/UpdateAnalogOutputTagResponse")]
        TrendingApp.TagServiceReference.AnalogOutputTag UpdateAnalogOutputTag(string token, TrendingApp.TagServiceReference.AnalogOutputTag analogOutput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/UpdateAnalogOutputTag", ReplyAction="http://tempuri.org/ITagService/UpdateAnalogOutputTagResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.AnalogOutputTag> UpdateAnalogOutputTagAsync(string token, TrendingApp.TagServiceReference.AnalogOutputTag analogOutput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllDigitalInputTags", ReplyAction="http://tempuri.org/ITagService/GetAllDigitalInputTagsResponse")]
        TrendingApp.TagServiceReference.DigitalInputTag[] GetAllDigitalInputTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllDigitalInputTags", ReplyAction="http://tempuri.org/ITagService/GetAllDigitalInputTagsResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.DigitalInputTag[]> GetAllDigitalInputTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetDigitalInputTag", ReplyAction="http://tempuri.org/ITagService/GetDigitalInputTagResponse")]
        TrendingApp.TagServiceReference.DigitalInputTag GetDigitalInputTag(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetDigitalInputTag", ReplyAction="http://tempuri.org/ITagService/GetDigitalInputTagResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.DigitalInputTag> GetDigitalInputTagAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddDigitalInputTag", ReplyAction="http://tempuri.org/ITagService/AddDigitalInputTagResponse")]
        void AddDigitalInputTag(string token, TrendingApp.TagServiceReference.DigitalInputTag digitalInputTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddDigitalInputTag", ReplyAction="http://tempuri.org/ITagService/AddDigitalInputTagResponse")]
        System.Threading.Tasks.Task AddDigitalInputTagAsync(string token, TrendingApp.TagServiceReference.DigitalInputTag digitalInputTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/UpdateDigitalInputTag", ReplyAction="http://tempuri.org/ITagService/UpdateDigitalInputTagResponse")]
        TrendingApp.TagServiceReference.DigitalInputTag UpdateDigitalInputTag(string token, TrendingApp.TagServiceReference.DigitalInputTag digitalInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/UpdateDigitalInputTag", ReplyAction="http://tempuri.org/ITagService/UpdateDigitalInputTagResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.DigitalInputTag> UpdateDigitalInputTagAsync(string token, TrendingApp.TagServiceReference.DigitalInputTag digitalInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllDigitalOutputTags", ReplyAction="http://tempuri.org/ITagService/GetAllDigitalOutputTagsResponse")]
        TrendingApp.TagServiceReference.DigitalOutputTag[] GetAllDigitalOutputTags(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllDigitalOutputTags", ReplyAction="http://tempuri.org/ITagService/GetAllDigitalOutputTagsResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.DigitalOutputTag[]> GetAllDigitalOutputTagsAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetDigitalOutputTag", ReplyAction="http://tempuri.org/ITagService/GetDigitalOutputTagResponse")]
        TrendingApp.TagServiceReference.DigitalOutputTag GetDigitalOutputTag(string token, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetDigitalOutputTag", ReplyAction="http://tempuri.org/ITagService/GetDigitalOutputTagResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.DigitalOutputTag> GetDigitalOutputTagAsync(string token, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddDigitalOutputTag", ReplyAction="http://tempuri.org/ITagService/AddDigitalOutputTagResponse")]
        void AddDigitalOutputTag(string token, TrendingApp.TagServiceReference.DigitalOutputTag digitalOutputTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddDigitalOutputTag", ReplyAction="http://tempuri.org/ITagService/AddDigitalOutputTagResponse")]
        System.Threading.Tasks.Task AddDigitalOutputTagAsync(string token, TrendingApp.TagServiceReference.DigitalOutputTag digitalOutputTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/UpdateDigitalOutputTag", ReplyAction="http://tempuri.org/ITagService/UpdateDigitalOutputTagResponse")]
        TrendingApp.TagServiceReference.DigitalOutputTag UpdateDigitalOutputTag(string token, TrendingApp.TagServiceReference.DigitalOutputTag digitalOutput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/UpdateDigitalOutputTag", ReplyAction="http://tempuri.org/ITagService/UpdateDigitalOutputTagResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.DigitalOutputTag> UpdateDigitalOutputTagAsync(string token, TrendingApp.TagServiceReference.DigitalOutputTag digitalOutput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/RemoveTag", ReplyAction="http://tempuri.org/ITagService/RemoveTagResponse")]
        bool RemoveTag(string token, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/RemoveTag", ReplyAction="http://tempuri.org/ITagService/RemoveTagResponse")]
        System.Threading.Tasks.Task<bool> RemoveTagAsync(string token, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/IsTagNameUnique", ReplyAction="http://tempuri.org/ITagService/IsTagNameUniqueResponse")]
        bool IsTagNameUnique(string token, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/IsTagNameUnique", ReplyAction="http://tempuri.org/ITagService/IsTagNameUniqueResponse")]
        System.Threading.Tasks.Task<bool> IsTagNameUniqueAsync(string token, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddTagValue", ReplyAction="http://tempuri.org/ITagService/AddTagValueResponse")]
        void AddTagValue(TrendingApp.TagServiceReference.TagValue tagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddTagValue", ReplyAction="http://tempuri.org/ITagService/AddTagValueResponse")]
        System.Threading.Tasks.Task AddTagValueAsync(TrendingApp.TagServiceReference.TagValue tagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/RemoveTagValue", ReplyAction="http://tempuri.org/ITagService/RemoveTagValueResponse")]
        void RemoveTagValue(string token, string tagValueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/RemoveTagValue", ReplyAction="http://tempuri.org/ITagService/RemoveTagValueResponse")]
        System.Threading.Tasks.Task RemoveTagValueAsync(string token, string tagValueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/UpdateTagValue", ReplyAction="http://tempuri.org/ITagService/UpdateTagValueResponse")]
        void UpdateTagValue(string token, TrendingApp.TagServiceReference.TagValue tagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/UpdateTagValue", ReplyAction="http://tempuri.org/ITagService/UpdateTagValueResponse")]
        System.Threading.Tasks.Task UpdateTagValueAsync(string token, TrendingApp.TagServiceReference.TagValue tagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetTagValue", ReplyAction="http://tempuri.org/ITagService/GetTagValueResponse")]
        TrendingApp.TagServiceReference.TagValue GetTagValue(string token, string tagValueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetTagValue", ReplyAction="http://tempuri.org/ITagService/GetTagValueResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.TagValue> GetTagValueAsync(string token, string tagValueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllTagValues", ReplyAction="http://tempuri.org/ITagService/GetAllTagValuesResponse")]
        TrendingApp.TagServiceReference.TagValue[] GetAllTagValues(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllTagValues", ReplyAction="http://tempuri.org/ITagService/GetAllTagValuesResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.TagValue[]> GetAllTagValuesAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetLastTagValue", ReplyAction="http://tempuri.org/ITagService/GetLastTagValueResponse")]
        TrendingApp.TagServiceReference.TagValue GetLastTagValue(string token, string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetLastTagValue", ReplyAction="http://tempuri.org/ITagService/GetLastTagValueResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.TagValue> GetLastTagValueAsync(string token, string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/getRTUValue", ReplyAction="http://tempuri.org/ITagService/getRTUValueResponse")]
        double getRTUValue(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/getRTUValue", ReplyAction="http://tempuri.org/ITagService/getRTUValueResponse")]
        System.Threading.Tasks.Task<double> getRTUValueAsync(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/setRTUValue", ReplyAction="http://tempuri.org/ITagService/setRTUValueResponse")]
        void setRTUValue(string address, double value, string signatureBase64, string hashValueBase64);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/setRTUValue", ReplyAction="http://tempuri.org/ITagService/setRTUValueResponse")]
        System.Threading.Tasks.Task setRTUValueAsync(string address, double value, string signatureBase64, string hashValueBase64);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITagServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITagService/NotifyValueChanged")]
        void NotifyValueChanged(TrendingApp.TagServiceReference.TagValue inputTag);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITagServiceChannel : TrendingApp.TagServiceReference.ITagService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TagServiceClient : System.ServiceModel.DuplexClientBase<TrendingApp.TagServiceReference.ITagService>, TrendingApp.TagServiceReference.ITagService {
        
        public TagServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public TagServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public TagServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TagServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TagServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Hello() {
            base.Channel.Hello();
        }
        
        public System.Threading.Tasks.Task HelloAsync() {
            return base.Channel.HelloAsync();
        }
        
        public void InitTrending(System.Guid id) {
            base.Channel.InitTrending(id);
        }
        
        public System.Threading.Tasks.Task InitTrendingAsync(System.Guid id) {
            return base.Channel.InitTrendingAsync(id);
        }
        
        public TrendingApp.TagServiceReference.AnalogInputTag[] GetAllAnalogInputTags() {
            return base.Channel.GetAllAnalogInputTags();
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.AnalogInputTag[]> GetAllAnalogInputTagsAsync() {
            return base.Channel.GetAllAnalogInputTagsAsync();
        }
        
        public TrendingApp.TagServiceReference.AnalogInputTag GetAnalogInputTag(string name) {
            return base.Channel.GetAnalogInputTag(name);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.AnalogInputTag> GetAnalogInputTagAsync(string name) {
            return base.Channel.GetAnalogInputTagAsync(name);
        }
        
        public void AddAnalogInputTag(string token, TrendingApp.TagServiceReference.AnalogInputTag analogInputTag) {
            base.Channel.AddAnalogInputTag(token, analogInputTag);
        }
        
        public System.Threading.Tasks.Task AddAnalogInputTagAsync(string token, TrendingApp.TagServiceReference.AnalogInputTag analogInputTag) {
            return base.Channel.AddAnalogInputTagAsync(token, analogInputTag);
        }
        
        public TrendingApp.TagServiceReference.AnalogInputTag UpdateAnalogInputTag(string token, TrendingApp.TagServiceReference.AnalogInputTag analogInput) {
            return base.Channel.UpdateAnalogInputTag(token, analogInput);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.AnalogInputTag> UpdateAnalogInputTagAsync(string token, TrendingApp.TagServiceReference.AnalogInputTag analogInput) {
            return base.Channel.UpdateAnalogInputTagAsync(token, analogInput);
        }
        
        public TrendingApp.TagServiceReference.AnalogOutputTag[] GetAllAnalogOutputTags(string token) {
            return base.Channel.GetAllAnalogOutputTags(token);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.AnalogOutputTag[]> GetAllAnalogOutputTagsAsync(string token) {
            return base.Channel.GetAllAnalogOutputTagsAsync(token);
        }
        
        public TrendingApp.TagServiceReference.AnalogOutputTag GetAnalogOutputTag(string token, string name) {
            return base.Channel.GetAnalogOutputTag(token, name);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.AnalogOutputTag> GetAnalogOutputTagAsync(string token, string name) {
            return base.Channel.GetAnalogOutputTagAsync(token, name);
        }
        
        public void AddAnalogOutputTag(string token, TrendingApp.TagServiceReference.AnalogOutputTag analogOutputTag) {
            base.Channel.AddAnalogOutputTag(token, analogOutputTag);
        }
        
        public System.Threading.Tasks.Task AddAnalogOutputTagAsync(string token, TrendingApp.TagServiceReference.AnalogOutputTag analogOutputTag) {
            return base.Channel.AddAnalogOutputTagAsync(token, analogOutputTag);
        }
        
        public TrendingApp.TagServiceReference.AnalogOutputTag UpdateAnalogOutputTag(string token, TrendingApp.TagServiceReference.AnalogOutputTag analogOutput) {
            return base.Channel.UpdateAnalogOutputTag(token, analogOutput);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.AnalogOutputTag> UpdateAnalogOutputTagAsync(string token, TrendingApp.TagServiceReference.AnalogOutputTag analogOutput) {
            return base.Channel.UpdateAnalogOutputTagAsync(token, analogOutput);
        }
        
        public TrendingApp.TagServiceReference.DigitalInputTag[] GetAllDigitalInputTags() {
            return base.Channel.GetAllDigitalInputTags();
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.DigitalInputTag[]> GetAllDigitalInputTagsAsync() {
            return base.Channel.GetAllDigitalInputTagsAsync();
        }
        
        public TrendingApp.TagServiceReference.DigitalInputTag GetDigitalInputTag(string name) {
            return base.Channel.GetDigitalInputTag(name);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.DigitalInputTag> GetDigitalInputTagAsync(string name) {
            return base.Channel.GetDigitalInputTagAsync(name);
        }
        
        public void AddDigitalInputTag(string token, TrendingApp.TagServiceReference.DigitalInputTag digitalInputTag) {
            base.Channel.AddDigitalInputTag(token, digitalInputTag);
        }
        
        public System.Threading.Tasks.Task AddDigitalInputTagAsync(string token, TrendingApp.TagServiceReference.DigitalInputTag digitalInputTag) {
            return base.Channel.AddDigitalInputTagAsync(token, digitalInputTag);
        }
        
        public TrendingApp.TagServiceReference.DigitalInputTag UpdateDigitalInputTag(string token, TrendingApp.TagServiceReference.DigitalInputTag digitalInput) {
            return base.Channel.UpdateDigitalInputTag(token, digitalInput);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.DigitalInputTag> UpdateDigitalInputTagAsync(string token, TrendingApp.TagServiceReference.DigitalInputTag digitalInput) {
            return base.Channel.UpdateDigitalInputTagAsync(token, digitalInput);
        }
        
        public TrendingApp.TagServiceReference.DigitalOutputTag[] GetAllDigitalOutputTags(string token) {
            return base.Channel.GetAllDigitalOutputTags(token);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.DigitalOutputTag[]> GetAllDigitalOutputTagsAsync(string token) {
            return base.Channel.GetAllDigitalOutputTagsAsync(token);
        }
        
        public TrendingApp.TagServiceReference.DigitalOutputTag GetDigitalOutputTag(string token, string name) {
            return base.Channel.GetDigitalOutputTag(token, name);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.DigitalOutputTag> GetDigitalOutputTagAsync(string token, string name) {
            return base.Channel.GetDigitalOutputTagAsync(token, name);
        }
        
        public void AddDigitalOutputTag(string token, TrendingApp.TagServiceReference.DigitalOutputTag digitalOutputTag) {
            base.Channel.AddDigitalOutputTag(token, digitalOutputTag);
        }
        
        public System.Threading.Tasks.Task AddDigitalOutputTagAsync(string token, TrendingApp.TagServiceReference.DigitalOutputTag digitalOutputTag) {
            return base.Channel.AddDigitalOutputTagAsync(token, digitalOutputTag);
        }
        
        public TrendingApp.TagServiceReference.DigitalOutputTag UpdateDigitalOutputTag(string token, TrendingApp.TagServiceReference.DigitalOutputTag digitalOutput) {
            return base.Channel.UpdateDigitalOutputTag(token, digitalOutput);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.DigitalOutputTag> UpdateDigitalOutputTagAsync(string token, TrendingApp.TagServiceReference.DigitalOutputTag digitalOutput) {
            return base.Channel.UpdateDigitalOutputTagAsync(token, digitalOutput);
        }
        
        public bool RemoveTag(string token, string name) {
            return base.Channel.RemoveTag(token, name);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveTagAsync(string token, string name) {
            return base.Channel.RemoveTagAsync(token, name);
        }
        
        public bool IsTagNameUnique(string token, string name) {
            return base.Channel.IsTagNameUnique(token, name);
        }
        
        public System.Threading.Tasks.Task<bool> IsTagNameUniqueAsync(string token, string name) {
            return base.Channel.IsTagNameUniqueAsync(token, name);
        }
        
        public void AddTagValue(TrendingApp.TagServiceReference.TagValue tagValue) {
            base.Channel.AddTagValue(tagValue);
        }
        
        public System.Threading.Tasks.Task AddTagValueAsync(TrendingApp.TagServiceReference.TagValue tagValue) {
            return base.Channel.AddTagValueAsync(tagValue);
        }
        
        public void RemoveTagValue(string token, string tagValueId) {
            base.Channel.RemoveTagValue(token, tagValueId);
        }
        
        public System.Threading.Tasks.Task RemoveTagValueAsync(string token, string tagValueId) {
            return base.Channel.RemoveTagValueAsync(token, tagValueId);
        }
        
        public void UpdateTagValue(string token, TrendingApp.TagServiceReference.TagValue tagValue) {
            base.Channel.UpdateTagValue(token, tagValue);
        }
        
        public System.Threading.Tasks.Task UpdateTagValueAsync(string token, TrendingApp.TagServiceReference.TagValue tagValue) {
            return base.Channel.UpdateTagValueAsync(token, tagValue);
        }
        
        public TrendingApp.TagServiceReference.TagValue GetTagValue(string token, string tagValueId) {
            return base.Channel.GetTagValue(token, tagValueId);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.TagValue> GetTagValueAsync(string token, string tagValueId) {
            return base.Channel.GetTagValueAsync(token, tagValueId);
        }
        
        public TrendingApp.TagServiceReference.TagValue[] GetAllTagValues(string token) {
            return base.Channel.GetAllTagValues(token);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.TagValue[]> GetAllTagValuesAsync(string token) {
            return base.Channel.GetAllTagValuesAsync(token);
        }
        
        public TrendingApp.TagServiceReference.TagValue GetLastTagValue(string token, string tagName) {
            return base.Channel.GetLastTagValue(token, tagName);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.TagValue> GetLastTagValueAsync(string token, string tagName) {
            return base.Channel.GetLastTagValueAsync(token, tagName);
        }
        
        public double getRTUValue(string address) {
            return base.Channel.getRTUValue(address);
        }
        
        public System.Threading.Tasks.Task<double> getRTUValueAsync(string address) {
            return base.Channel.getRTUValueAsync(address);
        }
        
        public void setRTUValue(string address, double value, string signatureBase64, string hashValueBase64) {
            base.Channel.setRTUValue(address, value, signatureBase64, hashValueBase64);
        }
        
        public System.Threading.Tasks.Task setRTUValueAsync(string address, double value, string signatureBase64, string hashValueBase64) {
            return base.Channel.setRTUValueAsync(address, value, signatureBase64, hashValueBase64);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TagServiceReference.IAlarmValueService", CallbackContract=typeof(TrendingApp.TagServiceReference.IAlarmValueServiceCallback))]
    public interface IAlarmValueService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmValueService/DoWork", ReplyAction="http://tempuri.org/IAlarmValueService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmValueService/DoWork", ReplyAction="http://tempuri.org/IAlarmValueService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmValueService/SubOnAlarmDisplay", ReplyAction="http://tempuri.org/IAlarmValueService/SubOnAlarmDisplayResponse")]
        void SubOnAlarmDisplay();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmValueService/SubOnAlarmDisplay", ReplyAction="http://tempuri.org/IAlarmValueService/SubOnAlarmDisplayResponse")]
        System.Threading.Tasks.Task SubOnAlarmDisplayAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmValueService/LogAlarmValue", ReplyAction="http://tempuri.org/IAlarmValueService/LogAlarmValueResponse")]
        void LogAlarmValue(TrendingApp.TagServiceReference.AlarmValue alarmValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmValueService/LogAlarmValue", ReplyAction="http://tempuri.org/IAlarmValueService/LogAlarmValueResponse")]
        System.Threading.Tasks.Task LogAlarmValueAsync(TrendingApp.TagServiceReference.AlarmValue alarmValue);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlarmValueServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAlarmValueService/NotifyAlarmTriggered")]
        void NotifyAlarmTriggered(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlarmValueServiceChannel : TrendingApp.TagServiceReference.IAlarmValueService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlarmValueServiceClient : System.ServiceModel.DuplexClientBase<TrendingApp.TagServiceReference.IAlarmValueService>, TrendingApp.TagServiceReference.IAlarmValueService {
        
        public AlarmValueServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AlarmValueServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AlarmValueServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmValueServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmValueServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public void SubOnAlarmDisplay() {
            base.Channel.SubOnAlarmDisplay();
        }
        
        public System.Threading.Tasks.Task SubOnAlarmDisplayAsync() {
            return base.Channel.SubOnAlarmDisplayAsync();
        }
        
        public void LogAlarmValue(TrendingApp.TagServiceReference.AlarmValue alarmValue) {
            base.Channel.LogAlarmValue(alarmValue);
        }
        
        public System.Threading.Tasks.Task LogAlarmValueAsync(TrendingApp.TagServiceReference.AlarmValue alarmValue) {
            return base.Channel.LogAlarmValueAsync(alarmValue);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TagServiceReference.IAlarmService")]
    public interface IAlarmService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/AddAlarm", ReplyAction="http://tempuri.org/IAlarmService/AddAlarmResponse")]
        bool AddAlarm(string token, TrendingApp.TagServiceReference.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/AddAlarm", ReplyAction="http://tempuri.org/IAlarmService/AddAlarmResponse")]
        System.Threading.Tasks.Task<bool> AddAlarmAsync(string token, TrendingApp.TagServiceReference.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetAllAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetAllAlarmsResponse")]
        TrendingApp.TagServiceReference.Alarm[] GetAllAlarms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetAllAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetAllAlarmsResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.Alarm[]> GetAllAlarmsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/RemoveAlarm", ReplyAction="http://tempuri.org/IAlarmService/RemoveAlarmResponse")]
        bool RemoveAlarm(string token, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/RemoveAlarm", ReplyAction="http://tempuri.org/IAlarmService/RemoveAlarmResponse")]
        System.Threading.Tasks.Task<bool> RemoveAlarmAsync(string token, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetAlarmsByName", ReplyAction="http://tempuri.org/IAlarmService/GetAlarmsByNameResponse")]
        TrendingApp.TagServiceReference.Alarm[] GetAlarmsByName(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetAlarmsByName", ReplyAction="http://tempuri.org/IAlarmService/GetAlarmsByNameResponse")]
        System.Threading.Tasks.Task<TrendingApp.TagServiceReference.Alarm[]> GetAlarmsByNameAsync(string tagName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlarmServiceChannel : TrendingApp.TagServiceReference.IAlarmService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlarmServiceClient : System.ServiceModel.ClientBase<TrendingApp.TagServiceReference.IAlarmService>, TrendingApp.TagServiceReference.IAlarmService {
        
        public AlarmServiceClient() {
        }
        
        public AlarmServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AlarmServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddAlarm(string token, TrendingApp.TagServiceReference.Alarm alarm) {
            return base.Channel.AddAlarm(token, alarm);
        }
        
        public System.Threading.Tasks.Task<bool> AddAlarmAsync(string token, TrendingApp.TagServiceReference.Alarm alarm) {
            return base.Channel.AddAlarmAsync(token, alarm);
        }
        
        public TrendingApp.TagServiceReference.Alarm[] GetAllAlarms() {
            return base.Channel.GetAllAlarms();
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.Alarm[]> GetAllAlarmsAsync() {
            return base.Channel.GetAllAlarmsAsync();
        }
        
        public bool RemoveAlarm(string token, string name) {
            return base.Channel.RemoveAlarm(token, name);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveAlarmAsync(string token, string name) {
            return base.Channel.RemoveAlarmAsync(token, name);
        }
        
        public TrendingApp.TagServiceReference.Alarm[] GetAlarmsByName(string tagName) {
            return base.Channel.GetAlarmsByName(tagName);
        }
        
        public System.Threading.Tasks.Task<TrendingApp.TagServiceReference.Alarm[]> GetAlarmsByNameAsync(string tagName) {
            return base.Channel.GetAlarmsByNameAsync(tagName);
        }
    }
}
